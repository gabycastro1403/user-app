{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routes.ts","webpack:///src/app/detail/detail.component.ts","webpack:///src/app/detail/detail.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/services/transactions.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","app_routes","path","component","pathMatch","redirectTo","app_routing","forRoot","DetailComponent","_transactionsService","transactionsResponse","user","largeScreen","widthScreen","screen","width","getTransactions","response","transactions","error","status","fire","icon","text","userName","FooterComponent","LoginComponent","name","getUser","save","TransactionsService","providedIn","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'citi-app';\n}\n","<div class=\"image-back\">\n    <router-outlet></router-outlet>\n    <app-footer></app-footer>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\n\n\n\n//Rutas\nimport { app_routing } from './app.routes'\n\n//Servicios\nimport {TransactionsService } from './services/transactions.service'\n\n//Componentes\nimport { AppComponent } from './app.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { DetailComponent } from './detail/detail.component';\nimport { LoginComponent } from './login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FooterComponent,\n    DetailComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    app_routing,\n    FormsModule,\n    SweetAlert2Module\n    \n  ],\n  providers: [\n    TransactionsService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DetailComponent } from './detail/detail.component';\r\n\r\nconst app_routes: Routes = [\r\n    { path: 'login', component: LoginComponent },\r\n    { path:'detail', component:DetailComponent },\r\n    { path: '**', pathMatch: 'full',  redirectTo: 'login'},\r\n];\r\n\r\nexport const app_routing = RouterModule.forRoot(app_routes)\r\n","import { Component, OnInit } from '@angular/core';\nimport { TransactionsService } from '../services/transactions.service'\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.css']\n})\nexport class DetailComponent implements OnInit {\n\n  constructor( private _transactionsService : TransactionsService) { }\n\n  transactionsResponse: any[] = [];\n  user:string = '';\n  largeScreen: boolean = false;\n\n  ngOnInit(): void {\n\n    const widthScreen = screen.width;\n    this.largeScreen =  widthScreen > 965? true : false;\n\n    this._transactionsService.getTransactions()\n    .then((response:any)=>{\n      this.transactionsResponse = response.transactions;\n    }).catch((error:any)=>{\n      if(error.status === 400){\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text:  'Falta algo para mostrar las transacciones!',\n        })\n      }else if(error.status === 422){\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text:'Lo sentimos, la información no puede ser recuperada en este momento.'\n        })\n      }\n    });\n  \n\n    this.user = this._transactionsService.userName;\n\n  }\n\n\n}\n","<div class=\"container container-detail\">\n    <div class=\"row\">\n        <div class=\"col-12 col-lg-4 user-name text-center pt-3\">\n            <!--title user name-->\n            <span class=\"user-small\">{{user}}</span>\n            <span class=\"user-large\"> Bienvenido : {{user}}</span>\n        </div>\n\n        <div class=\"col-lg-8  logo-large\">\n            <img alt=\"log-bank \" class=\"logo-bank rounded  d-block\" src=\"../../assets/logo-banco-2.png\">\n        </div>\n    </div>\n    <!--Listado de transacciones-->\n    <div class=\"row container-transactions\">\n        <!--title transactions-->\n        <div class=\"col-12 text-center\">\n            <span class=\"title-transactions mb-3\"> Transacciones Autorizadas :</span>\n        </div>\n        <!--cards of transaction-->\n        <div *ngFor=\"let item of transactionsResponse\">\n            <div class=\"row m-3 border border-secondary rounded\">\n                    <div class=\"col-12 col-lg-6 detail\">\n                        <span >ID: {{item.id}}</span>\n                    </div>\n                    <div class=\"col-12 col-lg-6 detail\">\n                        <span>Desc : {{item.description}}</span>\n                    </div>\n                    <div class=\"col-12 col-lg-6 detail\">\n                        <span>Cantidad : {{item.amount}}</span>\n                    </div>\n                    <div class=\"col-12 col-lg-6 \">\n                        <span>Status : {{item.status}}</span>\n                    </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-footer pt-3 pb-3\">\n    <div class=\"text-center \">\n        <span class=\"brand\">Your Bank | </span>\n        <span class=\"brand\">All rights reserved</span>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TransactionsService } from '../services/transactions.service'\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  name:string = '';\n  largeScreen :boolean = false;\n\n  constructor(private _transactionsService : TransactionsService) {\n    \n   }\n\n  ngOnInit(): void {\n    const widthScreen = screen.width;\n    this.largeScreen =  widthScreen > 965? true : false;\n  }\n\n  save(){\n    this._transactionsService.getUser(this.name);\n  }\n\n}\n","<div class  =\"container container-login\" >\n  <div class=\"row\">\n    <div class=\"logo col-12 pt-3 col-lg-6 small-logo\">\n      <img alt=\"logo-bank\" class=\"logo-bank rounded  d-block \" src=\"../../assets/logo-banco-2.png\">\n    </div>\n    \n    <!--inputs container-->\n    <form class=\"col-lg-6 form-content\">\n\n      <div class=\"form-group \">\n        <!--user input-->\n        <div class=\"col-12 col-lg-9 mt-3 mb-3 \">\n          <label>User:</label>\n          <input class =\"form-control\" type=\"text\"  name=\"first\"[(ngModel)]=\"name\" #ctrl=\"ngModel\" >\n        </div>\n\n        <!--Password input-->\n        <div class=\"col-12 col-lg-9 mb-3\">\n          <label>Pass:</label>\n          <input  class =\"form-control\" type=\"password\" name=\"pass\" >\n        </div>\n      </div>\n  \n      <!--button  send-->\n      <div class=\"row\">\n        <div class=\"col-4 col-lg-3\"></div>\n        <div class=\"col-4 col-lg-3\"></div>\n        <div class=\"col-4 col-lg-6\">\n          <button  type=\"button\" class=\"btn btn-outline-light\" (click) =\"save()\"[routerLink]=\"['/detail']\" >Send</button>\n        </div>\n      </div>\n\n    </form>\n\n      <!--Logo container-->\n      <div class=\"logo col-12 pt-3 col-lg-6 large-logo\">\n        <img alt=\"logo-bank\" class=\"logo-bank rounded  d-block \" src=\"../../assets/logo-banco-2.png\">\n      </div>\n    \n  </div>\n  \n    <div class=\"container text-center img-small\" >\n      <img alt=\"image\" class=\"rounded img-fluid mt-3\" src=\"../assets/bank-oficina-2.jpg\">\n    </div>\n  \n  </div>\n","import { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransactionsService {\n\n  private transactions : any = {\n    \"transactions\": [{\n        \"id\": 1,\n        \"description\": \"Payment 1\",\n        \"amount\": \"56.58\",\n        \"status\": \"active\"\n      },\n      {\n        \"id\": 2,\n        \"description\": \"Payment 2\",\n        \"amount\": \"60.58\",\n        \"status\": \"active\"\n      },\n      {\n        \"id\": 3,\n        \"description\": \"Payment 3\",\n        \"amount\": \"0.58\",\n        \"status\": \"active\"\n      }\n  \n    ]\n  };\n  \n  constructor() {\n   }\n   userName : string = '';\n\n   getTransactions() {\n    return new Promise((resolve) => {\n      resolve(this.transactions);\n    })\n    //uncomment this lines to test case reject\n    /*return new Promise((resolve,reject) => {\n      //reject({status:400});\n      reject({status:422});\n    })*/\n  }\n\n  getUser(name:string){\n    this.userName = name;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}